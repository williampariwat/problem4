import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

import java.io.File;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashSet;
import java.util.PriorityQueue;

//Collaborator : Kenny Hanswattana 6180040

public class Main {
    private Crawler crawler;
    private int totalWords;
    private String origUrl;
    private String origDir;
    private String regs = "^http:\\/\\/ooc.cs.muzoo.io\\/[^':<>]*(\\.[a-zA-Z]+$)*";
    private String[] tags = {"href", "src"}; //Just trying to change the bracket
    private PriorityQueue<String> urlQ;
    private HashSet<String> alreadyvisit;

    public Main(String url, String dir){
        origUrl = url;
        origDir = dir;
    }

    public void initializer(){
        totalWords = 0;
        crawler = new Crawler(origUrl,origDir);
        urlQ = new PriorityQueue<>();
        alreadyvisit = new HashSet<>();
        urlQ.add(origUrl);
        urlQ.add(origDir);
    }

    private int setup() throws IOException {
        initializer();
        crawl();
        crawler.closeClient();
        return totalWords;
    }


    private void crawl() throws IOException {
        while(!urlQ.isEmpty()){
            Document parsedfile = parser(urlQ.poll());
            totalWords += wordcounter(parsedfile);
            getchilddir(parsedfile);
        }
    }

    private int wordcounter(Document file){
        String text = file.text();
        int word = text.split(" ").length;
        return word;
    }

    private Document parser(String url) throws IOException {
        File f = crawler.download(url);
        return Jsoup.parse(f,"UTF-8",url);
    }

    private boolean isHtml(String chunk){
        return chunk.endsWith("/") || chunk.endsWith("html");
    }

    private String validateUrl(String chunk){
        String lnk = chunk;
        if(chunk.endsWith("/")){
            lnk += "index.html";
        }else if(!chunk.endsWith(".html")){
            lnk += "/index.html";
        }

        return lnk;
    }

    private void getchilddir(Document doc){
        for(String t:tags){
            Elements links = doc.select("["+t+"]");
            for(Element l:links){
                String chunk = l.absUrl(t).split("[?]")[0];
                if(chunk.matches(regs) && isHtml(chunk)){
                    chunk = validateUrl(chunk);
                    if(!alreadyvisit.contains(chunk)){
                        alreadyvisit.add(chunk);
                        urlQ.add(chunk);
                    }
                }
                crawler.download(chunk);
            }
        }
    }


    public static void main(String[] args) throws IOException {
        String url = "http://ooc.cs.muzoo.io/docs/index.html";
        String dir = "/Users/wiliamh/Desktop/Work/Sophomore Year/Term III/Software Construction/problem4/test";

        Main crawler = new Main(url,dir);
        System.out.println(crawler.setup());
    }
}
